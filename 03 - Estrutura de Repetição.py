# -*- coding: utf-8 -*-
"""Lista_03 - Estrutura de Repetição.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10TXxdZU-NM6PbnFBn8W7wp7iPxF_7geF

https://wiki.pythhttps://wiki.python.org.br/EstruturaDeDecisaoon.org.br/EstruturaDeDecisao

01 - Faça um programa que peça uma nota, entre zero e dez. Mostre uma mensagem caso o valor seja inválido e continue pedindo até que o usuário informe um valor válido.
"""

x = float(input('Insira uma nota de zero a dez = '))
while (x>10) or (x<0):
	x=float(input('Insira uma nota de zero a dez = '))

"""2 - Faça um programa que leia um nome de usuário e a sua senha e não aceite a senha igual ao nome do usuário, mostrando uma mensagem de erro e voltando a pedir as informações."""

n = input('Usuário = ')
s = input('Senha = ')

while n!=s:
    n = input('Usuário = ')
    s = input('Senha = ')

"""03 - Faça um programa que leia e valide as seguintes informações:
Nome: maior que 3 caracteres;
Idade: entre 0 e 150;
Salário: maior que zero;
Sexo: 'f' ou 'm';
Estado Civil: 's', 'c', 'v', 'd';
"""

nom = str(input('Insira nome = '))
ida = int(input('Insira idade = '))
sal = float(input('Insira salário = '))
sex = str(input('Insira sexo = '))
est_C = str(input('Insira estado civil = '))

while len(nom)<=3:
    print('Erro, insira novamente o nome')
    nom = str(input('Insira nome = '))

while ida<=0 and ida>=150:
    print('Erro, insira novamente a idade')
    ida = float(input('Insira idade = '))


while sal<0:
    print('Erro, insira novamente o salário')
    sal = float(input('Insira salário = '))

while sex !='m'and sex!='f':
    print('Erro, insira novamente o sexo')
    sex = str(input('Insira sexo = '))


while est_C !='s'and est_C!='c' and est_C!='v'and est_C!='d':
    print('Erro, insira novamente o estado civil')
    est_C = str(input('Insira sexo = '))

"""04 - Supondo que a população de um país A seja da ordem de 80000 habitantes com uma taxa anual de crescimento de 3% e que a população de B seja 200000 habitantes com uma taxa de crescimento de 1.5%. Faça um programa que calcule e escreva o número de anos necessários para que a população do país A ultrapasse ou iguale a população do país B, mantidas as taxas de crescimento"""

A = 80000
T_A = (3/100)
B = 200000
T_B = (1.5/100)

i = 0
while A<B:
    A = A+(A*T_A)
    B = B+(B*T_B)
    i+=1

print('O tempo será de '+str(i))

"""05 - Altere o programa anterior permitindo ao usuário informar as populações e as taxas de crescimento iniciais. Valide a entrada e permita repetir a operação."""

x = 'n'
while x!='s':
    A  = float(input('Insira população A ='))
    while A<0:
        print('erro, insira valor maior que zero')
        A  = float(input('Insira população A ='))
    T_A = float(input('Insira a Taxa de A ='))
    while T_A<0:
        print('erro, insira valor maior que zero')
        T_A  = float(input('Insira população A ='))
    
    B  = float(input('Insira população B ='))
    while B<0:
        print('erro, insira valor maior que zero')
        B  = float(input('Insira população A ='))
    T_B = float(input('Insira a Taxa de B ='))
    while T_B<0:
        print('erro, insira valor maior que zero')
        T_B = float(input('Insira a Taxa de B ='))

    print('ok, calculando....')
    i = 0
    while A<B:
        A = A+(A*T_A)
        B = B+(B*T_B)
        i+=1
    print('O tempo será de '+str(i)+' anos')
    x = str(input('Deseja encerrar a operação (s/n) = '))

"""06 - Faça um programa que imprima na tela os números de 1 a 20, um abaixo do outro. Depois modifique o programa para que ele mostre os números um ao lado do outro."""

for i in range(0,21,1):
    print(i)
x = []
for i in range(0,21,1):
    x.append(i)
print(x)

"""07 - Faça um programa que leia 5 números e informe o maior número.

"""

y = []
for i in range(0,5,1):
    x = float(input('Insira 5 valores = '))
    y.append(x)
print('O maior valor é '+ str(max(y)))

"""08 - Faça um programa que leia 5 números e informe a soma e a média dos números.

"""

y = []
for i in range(0,5,1):
    x = float(input('Insira 5 valores = '))
    y.append(x)
print('a média dos valores é '+ str(sum(y)/len(y)))
print('a soma dos valores é '+ str(sum(y)))

"""09 - Faça um programa que imprima na tela apenas os números ímpares entre 1 e 50.

"""

x = []
for i in range(1,50,2):
    x.append(i)
print('Os numeros impares são = ' + str(x))

"""10 - Faça um programa que receba dois números inteiros e gere os números inteiros que estão no intervalo compreendido por eles.

"""

n1 = int(input('Insira o primeiro valor = '))
n2 = int(input('Insira o segundo valor = '))
n3 = n1+1
x = []
for i in range(n3,n2,1):
    x.append(i)
print('Os numeros contemplados entre o intervalo de ' + str(n1)+' e '+str(n2)+' é ='+str(x))

"""11 - Altere o programa anterior para mostrar no final a soma dos números.

"""

n1 = int(input('Insira o primeiro valor = '))
n2 = int(input('Insira o segundo valor = '))
n3 = n1+1
x = []
for i in range(n3,n2,1):
    x.append(i)
print('A soma dos valores entre o intevalo de ' + str(n1)+' e '+str(n2)+' é = '+str(sum(x)))

"""12 - Desenvolva um gerador de tabuada, capaz de gerar a tabuada de qualquer número inteiro entre 1 a 10. O usuário deve informar de qual numero ele deseja ver a tabuada. A saída deve ser conforme o exemplo abaixo:"""

#Tabuada de 5:
#5 X 1 = 5
#5 X 2 = 10
#...
#5 X 10 = 50

x = int(input('Inserir valor desejado = '))
print('Valor da tabuada de ' + str(x))
for i in range(0,10,1):
    print(str(x)+' X '+str(i+1)+' = '+str(x*(i+1)))

"""13 - Faça um programa que peça dois números, base e expoente, calcule e mostre o primeiro número elevado ao segundo número. Não utilize a função de potência da linguagem. (ajuste)"""

b = int(input('Insira o primeiro valor = '))
e = int(input('Insira o o segundo valor = '))

a = 1

for i in range(b):
    a *= b
    i += 1
print(a)

"""14 - Faça um programa que peça 10 números inteiros, calcule e mostre a quantidade de números pares e a quantidade de números impares"""

x = []
p = []
im = []

for i in range(0,10,1):
    x.append(int(input('Insira 10 valores = ')))
for i in range(len(x)):
    if (x[i]%2) == 0:
        p.append(x[i])
    else:
        im.append(x[i])
print('Existem '+ (str(len(p)))+ ' Numeros pares')
print('Existem '+ (str(len(im)))+ ' Numeros ímpares')

"""15 - A série de Fibonacci é formada pela seqüência 1,1,2,3,5,8,13,21,34,55,... Faça um programa capaz de gerar a série até o n−ésimo termo.
(verificar)
"""

da = int(input('Insira n-ésimo termo para série de Fibonacci = '))


cont = 0
x1 = 1
x2 = 1
a = []


while True==da:
    cont = x1+x2
    x1 = x2
    x2 = cont
    a.append(cont)
print('Série de Fibonacci menores que 500 = '+ str(a))

"""16 - A série de Fibonacci é formada pela seqüência 0,1,1,2,3,5,8,13,21,34,55,... Faça um programa que gere a série até que o valor seja maior que 500."""

cont = 0
x1 = 1
x2 = 1
a = []
for i in range(0,2,1):
    a.append(1)
while cont<500:
    cont = x1+x2
    x1 = x2
    x2 = cont
    if cont < 500:
        a.append(cont)
print('Série de Fibonacci menores que 500 = '+ str(a))

"""17 - Faça um programa que calcule o fatorial de um número inteiro fornecido pelo usuário. Ex.: 5!=5.4.3.2.1=120


"""

x = int(input('Insira um valor fatorial = '))


for i in range(1,x):
    x1 = (i*x)
    x = x1

print('Resultado é '+str(x1))

"""18 - Faça um programa que, dado um conjunto de N números, determine o menor valor, o maior valor e a soma dos valores.

"""

x = int(input('Insira N números desejados = '))
lis = []

for i in range(1,x+1,1):
    x1 = int(input('valores desejados = '))
    lis.append(x1)
print('Menor Valor = '+str(min(lis)))
print('Maior Valor = '+str(max(lis)))
print('Soma dos Valores = '+str(sum(lis)))

"""19 - Altere o programa anterior para que ele aceite apenas números entre 0 e 1000.

"""

x_t = int(input('Insira N números desejados = '))
lis = []

while (x_t<0) or (x_t>1000):
    print('ERRO - Valor fora do intervalo desejado, inserir números entre 0 e 1000')
    x_t = int(input('Insira N números desejados = '))

for i in range(1,x_t+1,1):
    x1 = int(input('valores desejados = '))
    lis.append(x1)
print('Menor Valor = '+str(min(lis)))
print('Maior Valor = '+str(max(lis)))
print('Soma dos Valores = '+str(sum(lis)))

"""20 - Altere o programa de cálculo do fatorial, permitindo ao usuário calcular o fatorial várias vezes e limitando o fatorial a números inteiros positivos e menores que 16."""

x = 'n'
while x!='s':
    a = str(input('Insira um valor fatorial, números inteiros positivos e menores que 16 = '))
    a1 = int(a.find('.'))
    while a1!=-1:
        print('ERRO - Valor não corresponde a um inteiro')
        a = str(input('Insira um valor fatorial = '))
        a1 = int(a.find('.'))   
    a = int(a)
    while a<0:
        print('ERRO - Não corresponde a um valor positivo')
        a = int(input('Insira um valor fatorial = '))
    while a>=16:
        print('ERRO - Valores maiores que 16')
        a = int(input('Insira um valor fatorial = '))
    for i in range(1,a):
        x1 = (i*a)
        a = x1
    print('Resultado é '+str(x1))
    x = str(input('Deseja encerrar a operação (s/n) = '))

"""21 - Faça um programa que peça um número inteiro e determine se ele é ou não um número primo. Um número primo é aquele que é divisível somente por ele mesmo e por 1.  

Exe: x+=1 é equivalente a x = x+1


"""

a = str(input('Insira um número inteiro = '))
cont = 0
a1 = int(a.find('.'))
while a1!=-1:
    print('ERRO - Valor não corresponde a um inteiro')
    a = str(input('Insira um valor fatorial = '))
    a1 = int(a.find('.'))   
a = int(a)

for i in range(2,a):
    if(a%i==0):
        cont += 1
if cont==0:
    print(str(a)+' É um número primo')
else:
    print(str(a)+' Não é um número primo')

"""22 - Altere o programa de cálculo dos números primos, informando, caso o número não seja primo, por quais número ele é divisível.

"""

a = str(input('Insira um número inteiro = '))
cont = 0
n_r = []

a1 = int(a.find('.'))
while a1!=-1:
    print('ERRO - Valor não corresponde a um inteiro')
    a = str(input('Insira um valor fatorial = '))
    a1 = int(a.find('.'))   
a = int(a)

for i in range(2,a):
    if(a%i==0):
        cont += 1
    n_r.append(i)

if cont==0:
    print(str(a)+' É um número primo')
else:
    print(str(a)+' Não é um número primo, o valor pode ser dividido por '+str(n_r))

"""23 - Faça um programa que mostre todos os primos entre 1 e N sendo N um número inteiro fornecido pelo usuário. O programa deverá mostrar também o número de divisões que ele executou para encontrar os números primos. Serão avaliados o funcionamento, o estilo e o número de testes (divisões) executados. (ver)

"""

a = str(input('Insira um número inteiro = '))
cont = 0
n_r = []

a1 = int(a.find('.'))
while a1!=-1:
    print('ERRO - Valor não corresponde a um inteiro')
    a = str(input('Insira um valor fatorial = '))
    a1 = int(a.find('.'))   
a = int(a)

for i in range(2,a):
    if(a%i==0):
        cont += 1
    n_r.append(i)

if cont==0:
    print(str(a)+' É um número primo')
else:
    print(str(a)+' Não é um número primo, o valor pode ser dividido por '+str(n_r))

v = []
n_r = []
cont = 0

a = int(input('Insira números de 1 até n = '))

for i in range(1,a+1,1):
    v.append(i)
 

print(v)

"""24 - Faça um programa que calcule o mostre a média aritmética de N notas.

"""

a = str(input('Número desejado de notas = '))
cont = 0
a1 = int(a.find('.'))
while a1!=-1:
    print('ERRO - Valor não corresponde a um inteiro')
    a = str(input('Insira um valor fatorial = '))
    a1 = int(a.find('.'))   
a = int(a)

va = []
for i in range(0,a,1):
    x = float(input('Insira as notas = '))
    va.append(x)

print('As notas inseridas foram ='+str(va)+',média aritmética correspondente é:'+str(sum(va)/len(va)))

"""25 - Faça um programa que peça para n pessoas a sua idade, ao final o programa devera verificar se a média de idade da turma varia entre 0 e 25,26 e 60 e maior que 60; e então, dizer se a turma é jovem, adulta ou idosa, conforme a média calculada.

"""

import pandas as pd

j = 'n'

while j!='s':

    a = str(input('Insira o número de pessoas desejadas = '))
    cont = 0
    a1 = int(a.find('.'))
    while a1!=-1:
        print('ERRO - Número precisa ser um inteiro')
        a = str(input('Insira o número de pessoas desejadas = '))
        a1 = int(a.find('.'))   
    a = int(a)

    while a<0:
        print('ERRO - número de pessoas precisa ser maior que zero')
        a = int(input('Insira um valor positivo para a idade = '))   


    va = []
    for i in range(1,a+1,1):
        x = float(input('Insira as idades das pessoas = '))
        va.append(x)

    me = sum(va)/len(va)

    va = pd.DataFrame({'Idades':va})
    print(va)

    if (me<=0) or (me<=26):
        print('A média das idades são '+str(me)+', ou seja pessoas jovens') 

    elif (me>26) or (me<=60):
        print('A média das idades são '+str(me)+', ou seja pessoas adultas') 

    elif (me>60):
        print('A média das idades são '+str(me)+', ou seja pessoas idosas') 

    j = str(input('Deseja encerrar o programa (s/n) = '))

"""26 - Numa eleição existem três candidatos. Faça um programa que peça o número total de eleitores. Peça para cada eleitor votar e ao final mostrar o número de votos de cada candidato"""

import pandas as pd

a = str(input('N. Total de eleitores = '))
cont = 0
a1 = int(a.find('.'))
while a1!=-1:
    print('ERRO - Número precisa ser um inteiro')
    a = str(input('N. Total de eleitores = '))
    a1 = int(a.find('.'))   
a = int(a)
while a<0:
    print('ERRO - número de eleitores precisa ser positivo')
    a = int(input('N. Total de eleitores = '))  

vo = []
for i in range(1,a+1,1):
    x = str(input('Insira o voto desejado, ex: candidato 1 - c1, candidato 2 - c2 e canditado 3 - c3: '))
    vo.append(x)

vo = pd.DataFrame({'voto':vo})
print(vo.value_counts())

"""27 - Faça um programa que calcule o número médio de alunos por turma. Para isto, peça a quantidade de turmas e a quantidade de alunos para cada turma. As turmas não podem ter mais de 40 alunos.

"""

import pandas as pd
a = str(input('N. de turmas = '))
a1 = int(a.find('.'))
while a1!=-1:
    print('ERRO - Número precisa ser um inteiro')
    a = str(input('N. de turmas = '))
    a1 = int(a.find('.'))   
a = int(a)
while a<0:
    print('ERRO - número de turmas precisa ser positivo')
    a = int(input('N. de turmas = '))  

t = []
for i in range(1,a+1,1):
    x = input('Tamanho da turma '+str(i)+' = ')
    x1 = int(x.find('.'))
    while x1!=-1:
        print('ERRO - Número precisa ser um inteiro')
        x = str(input('Insira novamente = '))
        x1 = int(x.find('.'))   
    x = int(x)
    while x<0:
        print('ERRO - número de alunos precisa ser positivo')
        x = int(input('Insira novamente = '))  
    while x>40:
        print('ERRO - número de turmas não podem ter mais que 40 alunos')
        x = int(input('Insira novamente = ')) 
    t.append(x)

r = sum(t)/a

t = pd.DataFrame({'Alunos por turma':t})

print(t)
print(f'média de alunos por turma é equivalente a {str(r)}')

"""28 - Faça um programa que calcule o valor total investido por um colecionador em sua coleção de CDs e o valor médio gasto em cada um deles. O usuário deverá informar a quantidade de CDs e o valor para em cada um"""

import pandas as pd
a = str(input('Quant. de cd = '))
a1 = int(a.find('.'))
while a1!=-1:
    print('ERRO - Número precisa ser um inteiro')
    a = str(input('Quant. de cd = '))
    a1 = int(a.find('.'))   
a = int(a)
while a<0:
    print('ERRO - número de turmas precisa ser positivo')
    a = int(input('Quant. de cd = '))  

t = []
for i in range(1,a+1,1):
    x = input('valor do cd '+str(i)+' = ')
    x1 = int(x.find('.'))
    while x1!=-1:
        print('ERRO - Número precisa ser um inteiro')
        x = str(input('Insira novamente = '))
        x1 = int(x.find('.'))   
    x = int(x)
    while x<0:
        print('ERRO - número de cd precisa ser positivo')
        x = int(input('Insira novamente = '))  

    t.append(x)

print(f'Total gasto pelo comprador {str(sum(t))}')
print(f'Média de gasto por cada cd foi de {str(sum(t)/a)}')

"""29 - O Sr. Manoel Joaquim possui uma grande loja de artigos de R$ 1,99, com cerca de 10 caixas. Para agilizar o cálculo de quanto cada cliente deve pagar ele desenvolveu um tabela que contém o número de itens que o cliente comprou e ao lado o valor da conta. Desta forma a atendente do caixa precisa apenas contar quantos itens o cliente está levando e olhar na tabela de preços. Você foi contratado para desenvolver o programa que monta esta tabela de preços, que conterá os preços de 1 até 50 produtos, conforme o exemplo abaixo:"""

'''
Lojas Quase Dois - Tabela de preços
1 - R$ 1.99
2 - R$ 3.98
...
50 - R$ 99.50
'''

p = 1.99
print('Lojas Quase Dois - Tabela de preços')
for i in range(1,51,1):
    x = p*i
    print(f'{i} - R$ {x}')

"""30 - O Sr. Manoel Joaquim acaba de adquirir uma panificadora e pretende implantar a metodologia da tabelinha, que já é um sucesso na sua loja de 1,99. Você foi contratado para desenvolver o programa que monta a tabela de preços de pães, de 1 até 50 pães, a partir do preço do pão informado pelo usuário, conforme o exemplo abaixo:

"""

'''
Preço do pão: R$ 0.18
Panificadora Pão de Ontem - Tabela de preços
1 - R$ 0.18
2 - R$ 0.36
...
50 - R$ 9.00
'''

p = float(input('Insira valor do pão = '))

while p<0:
    print('ERRO - valor precisa ser positivo')
    p = float(input('Insira valor do pão = '))  

print(f'Preço do pão: R$ {p}')
print('Panificadora Pão de Ontem - Tabela de preços')

for i in range(1,51,1):
    x = p*i
    x = round(x,2)
    print(f'{i} - R$ {x}')

"""31 - O Sr. Manoel Joaquim expandiu seus negócios para além dos negócios de 1,99 e agora possui uma loja de conveniências. Faça um programa que implemente uma caixa registradora rudimentar. O programa deverá receber um número desconhecido de valores referentes aos preços das mercadorias. Um valor zero deve ser informado pelo operador para indicar o final da compra. O programa deve então mostrar o total da compra e perguntar o valor em dinheiro que o cliente forneceu, para então calcular e mostrar o valor do troco. Após esta operação, o programa deverá voltar ao ponto inicial, para registrar a próxima compra. A saída deve ser conforme o exemplo abaixo:"""

'''
Lojas Tabajara 
Produto 1: R$ 2.20
Produto 2: R$ 5.80
Produto 3: R$ 0
Total: R$ 9.00
Dinheiro: R$ 20.00
Troco: R$ 11.00
...

j = 'n'

while j!='s':
    print('Lojas Tabajara')
    da = []

    for i in range(1,10000,1):
        p = float(input(f'produto {i}: '))


        if p==0:
            break
        else:
            da.append(p)

    print(f'Total: {sum(da)}')
    din = float(input('insira o valor recebido: '))
    t = print(f'Troco: {din-sum(da)}')
    j = str(input('Deseja encerrar a operação = '))

"""32 - Faça um programa que calcule o fatorial de um número inteiro fornecido pelo usuário. Ex.: 5!=5.4.3.2.1=120. A saída deve ser conforme o exemplo abaixo: """

'''
Fatorial de: 5
5! =  5 . 4 . 3 . 2 . 1 = 120
'''

j = 'n'

while j!='s':
    print('--- Algorítimo para cálculo de fatorial ---')

    x = int(input('Insira um valor fatorial = '))

    for i in range(1,x):
        x1 = (i*x)
        x = x1

    n = (i+1)
    print(f'{n}! = ', end = '')

    for i in range(n-1):
        print(n,end=".")
        n -=1
    print(f'1 =',x)
    j = str(input('Deseja encerrar a operação = '))

"""33 - O Departamento Estadual de Meteorologia lhe contratou para desenvolver um programa que leia as um conjunto indeterminado de temperaturas, e informe ao final a menor e a maior temperaturas informadas, bem como a média das temperaturas."""

print('--- Temperaturas ---')
print('Para encerrar operação coloque a letra x ')
x = 1.
da = []

while True:
    a = input('Insira as temperaturas: ')
    da.append(a)
    if a == 'x':
        break
da = [float(i) for i in da[:-1]]

print(f'Menor temperatura informada: {min(da)}')
print(f'Maior temperatura informada: {max(da)}')
print(f'Temperatura média: {(sum(da)/len(da))}')

"""34 - Os números primos possuem várias aplicações dentro da Computação, por exemplo na Criptografia. Um número primo é aquele que é divisível apenas por um e por ele mesmo. Faça um programa que peça um número inteiro e determine se ele é ou não um número primo.

"""

a = str(input('Insira um número inteiro = '))
cont = 0
a1 = int(a.find('.'))
while a1!=-1:
    print('ERRO - Valor não corresponde a um inteiro')
    a = str(input('Insira um valor fatorial = '))
    a1 = int(a.find('.'))   
a = int(a)

for i in range(2,a):
    if(a%i==0):
        cont += 1
if cont==0:
    print(str(a)+' É um número primo')
else:
    print(str(a)+' Não é um número primo')

"""35 - Encontrar números primos é uma tarefa difícil. Faça um programa que gera uma lista dos números primos existentes entre 1 e um número inteiro informado pelo usuário."""

a = str(input('Insira um intervalos de valores inteiros, ex 1 até n = '))
a1 = int(a.find('.'))
while a1!=-1:
    print('ERRO - Valor não corresponde a um inteiro')
    a = str(input('Insira um valor fatorial = '))
    a1 = int(a.find('.'))   
a = int(a)

def ind_p(x):
    cont = 0
    for i in range(2,x):
        if(x%i==0):
            cont += 1
    if cont==0:
        print(f'{str(x)} - É um número primo')
    else:
        print(f'{str(x)} - Não é um número primo')

for i in range(1,a,1):
    ind_p(i)

"""36 - Desenvolva um programa que faça a tabuada de um número qualquer inteiro que será digitado pelo usuário, mas a tabuada não deve necessariamente iniciar em 1 e terminar em 10, o valor inicial e final devem ser informados também pelo usuário, conforme exemplo abaixo:

"""

'''
Montar a tabuada de: 5
Começar por: 4
Terminar em: 7

Vou montar a tabuada de 5 começando em 4 e terminando em 7:
5 X 4 = 20
5 X 5 = 25
5 X 6 = 30
5 X 7 = 35
Obs: Você deve verificar se o usuário não digitou o final menor que o inicial.

'''

x =  int(input('Valor desejado para Tabuada = '))
x1 = int(input('Inserir começo tabuada = '))
x2 = int(input('Inserir final tabuada = '))

while x1>=x2:
    print('ERRO - Valor do intervalo final precisa ser maior que o inicial')
    x1 = int(input('Inserir começo tabuada = '))
    x2 = int(input('Inserir final tabuada = '))


print('Valor da tabuada de ' + str(x))

for i in range(x1-1,x2,1):
    print(str(x)+' X '+str(i+1)+' = '+str(x*(i+1)))

"""37 - Uma academia deseja fazer um senso entre seus clientes para descobrir o mais alto, o mais baixo, a mais gordo e o mais magro, para isto você deve fazer um programa que pergunte a cada um dos clientes da academia seu código, sua altura e seu peso. O final da digitação de dados deve ser dada quando o usuário digitar 0 (zero) no campo código. Ao encerrar o programa também deve ser informados os códigos e valores do clente mais alto, do mais baixo, do mais gordo e do mais magro, além da média das alturas e dos pesos dos clientes"""

import pandas as pd
print('-- Senso para clientes academia --')

id = []
alt = []
pes = []

x=1
while x != 0:
    a = int(input('ID - cliente: '))
    id.append(a)
    
    b = float(input('Altura: '))
    alt.append(b)

    c = float(input('Peso: '))
    pes.append(c)

    x = int(input('Para cancelar operação insira o valor 0, deseja continuar insira 1: '))

id = pd.DataFrame({'Id':id})
alt = pd.DataFrame({'altura':alt})
pes = pd.DataFrame({'peso':pes})

da = pd.concat([id,alt,pes], axis= 1)
da
print('---------------------------')
print(f'---Id com maior peso---')
print(da[da.peso == da.peso.max()])
print('---------------------------')
print(f'---Id com menor peso---') 
print(da[da.peso == da.peso.min()])
print('---------------------------')

print(f'---Id com maior altura---')
print(da[da.altura == da.altura.max()])
print('---------------------------')

print(f'---Id com menor altura---')
print(da[da.altura == da.altura.min()])
print('---------------------------')
print(f'Média dos pesos: {da.peso.mean()}')
print(f'Média das alturas: {da.altura.mean()}')

"""38 - Um funcionário de uma empresa recebe aumento salarial anualmente: Sabe-se que:
Esse funcionário foi contratado em 1995, com salário inicial de R$ 1.000,00;
Em 1996 recebeu aumento de 1,5% sobre seu salário inicial;
A partir de 1997 (inclusive), os aumentos salariais sempre correspondem ao dobro do percentual do ano anterior. Faça um programa que determine o salário atual desse funcionário. Após concluir isto, altere o programa permitindo que o usuário digite o salário inicial do funcionário.
"""

# 1° - Parte -------------------------------------------
#Data ----------------------------------
import datetime
currentDateTime = datetime.datetime.now()
data = currentDateTime.date()
an = data.strftime("%Y")
ano_i = 1995
#salário 1996--------------
sal = 1000
ta_x = (1.5/100)

ano_i_i = 1997
ano_a = int(an)
sal_i = sal+(sal*ta_x)

#calculo final

while ano_i_i < ano_a:
    ano_i_i += 1
    sal_i *= 1 + ta_x
    ta_x *= 2

print(f'O Salário de {sal}$ em {ano_i} é atualmente ({ano_a}) equivalente á {round(sal_i,2)}$')

# 2° - Parte (automatização)-------------------------------------------
#Data ----------------------------------

ano_i = 1995
#salário 1996--------------
sal = float(input('Insira o salário correspondente a 1996 = '))
an = int(input('Insira o ano atual = '))
ta_x = (1.5/100)

ano_i_i = 1997
ano_a = int(an)
sal_i = sal+(sal*ta_x)

#calculo final

while ano_i_i < ano_a:
    ano_i_i += 1
    sal_i *= 1 + ta_x
    ta_x *= 2

print(f'O Salário de {sal}$ em {ano_i} é atualmente ({ano_a}) equivalente á {round(sal_i,2)}$')

"""39 - Faça um programa que leia dez conjuntos de dois valores, o primeiro representando o número do aluno e o segundo representando a sua altura em centímetros. Encontre o aluno mais alto e o mais baixo. Mostre o número do aluno mais alto e o número do aluno mais baixo, junto com suas alturas."""

import pandas as pd
id = []
alt = []
for i in range(1,11,1):
    x = int(input('n° do aluno = '))
    y = float(input('Altura em centimentros = '))
    id.append(x)
    alt.append(y)

id = pd.DataFrame({'nome':id})
alt = pd.DataFrame({'altura':alt})

df = pd.concat([id,alt], axis=1)

print('---------------------------------------')
print(f'Aluno mais alto:')
print('---------------------------------------')
print(df[df.altura == df.altura.max()])
print('---------------------------------------')
print(f'Aluno mais baixo:')
print('---------------------------------------')
print(df[df.altura == df.altura.min()])

"""40 - Foi feita uma estatística em cinco cidades brasileiras para coletar dados sobre acidentes de trânsito. Foram obtidos os seguintes dados:

"""

''''
a-Código da cidade;
b-Número de veículos de passeio (em 1999);
c-Número de acidentes de trânsito com vítimas (em 1999). 
'''

"""
Deseja-se saber:
1-Qual o maior e menor índice de acidentes de transito e a que cidade pertence;
2-Qual a média de veículos nas cinco cidades juntas;
3-Qual a média de acidentes de trânsito nas cidades com menos de 2.000 veículos de passeio"""

import pandas as pd
c = []
nv = []
na = []

for i in range(1,6,1):
    cod_c = int(input('Código da cidade = '))
    n_v_p = int(input('N° de veículo de passeio = '))
    n_a_V = int(input('N° de acidentes com vítimas = '))
    c.append(cod_c)
    nv.append(n_v_p)
    na.append(n_a_V)

id_a = []
for i in range(-1,4,1):
    ida = na[i+1]/nv[i+1]
    id_a.append(ida)

c = pd.DataFrame({'Cod_cidade':c})
nv = pd.DataFrame({'N_vei_pas':nv})
na = pd.DataFrame({'N_aciden_vitimas':na})
id_a = pd.DataFrame({'ind_acident':id_a})

df = pd.concat([c,nv,na,id_a], axis = 1)
df
print('----------------------------------')
print('Maior indice de acidentes')
print(df[df.ind_acident == df.ind_acident.max()])
print('----------------------------------')
print('Menor indice de acidentes')
print(df[df.ind_acident == df.ind_acident.min()])
print('----------------------------------')
print(f'Média de veículos das 5 cidades: {((sum(df.N_vei_pas))/5)}')
df1 = df[df.N_vei_pas<2000] 
print('----------------------------------')
print(f'Média de acidentes de transito nas cidades com menos de 2000 veículos: {(sum(df1.N_aciden_vitimas)/len(df1.N_aciden_vitimas))}')

"""41 - Faça um programa que receba o valor de uma dívida e mostre uma tabela com os seguintes dados: valor da dívida, valor dos juros, quantidade de parcelas e valor da parcela."""

'''
Os juros e a quantidade de parcelas seguem a tabela abaixo:
Quantidade de Parcelas  % de Juros sobre o valor inicial da dívida
1       0
3       10
6       15
9       20
12      25
'''

'''
Exemplo de saída do programa:
Valor da Dívida Valor dos Juros Quantidade de Parcelas  Valor da Parcela
R$ 1.000,00     0               1                       R$  1.000,00
R$ 1.100,00     100             3                       R$    366,00
R$ 1.150,00     150             6                       R$    191,67
'''

import numpy as np
x =  float(input('Insira o valor da dívida = '))
d = int(input('Insira o a quantidade de parcelas que deseja ver = '))
p = []
n = 0
n1 = 10

tx = [10]

for i in range(0,d,1):
    n+=3
    p.append(n)

for i in range(0,d,1):
    n1+=5
    tx.append(n1)

#esquema para realizar tarefas em listas
tx = [float(i)/100 for i in tx]
div = [float(i)*x for i in tx]

nv = [float(i)+x for i in div]

nv1 = np.array(nv)

p1 = p
p1.insert(0, 1)
p1 = np.array(p1)
vp = nv1/p1
nv.insert(0,x)
div.insert(0,0)

print('-----------------------------Informações -----------------------------------------')
print(f'Valor da Dívida -- Valor dos Juros -- Quantidade de Parcelas -- Valor da Parcela')

for i,j,k,l in zip(nv,div,p,vp):
    print("{: >10} {: >18} {: >20}  {: >31}".format(i,j,k,l))

"""42 - Faça um programa que leia uma quantidade indeterminada de números positivos e conte quantos deles estão nos seguintes intervalos: [0-25], [26-50], [51-75] e [76-100]. A entrada de dados deverá terminar quando for lido um número negativo."""

g1 = []
g2 = []
g3 = []
g4 = []

x = float(input('insira um valor = '))
while x>=0:
    x = float(input('insira um valor = '))
    if (x>0) and (x<=25):
        g1.append(x)
    elif (x>=26) and (x<=50):
        g2.append(x)
    elif (x>=51) and (x<=75):
        g3.append(x)
    elif (x>=76) and (x<=100):
        g4.append(x)

g1 = len(g1)
g2 = len(g2)
g3 = len(g3)
g4 = len(g4)

print('-----------Resultado-------------')
print(' Grupo 1 [0-25] ---- Grupo 2 [26-50] ---- Grupo 3 [51-75] ---- Grupo 4 [76-100]')
print("{: >10} {: >13} {: >20}  {: >25}".format(g1,g2,g3,g4))

"""43 - O cardápio de uma lanchonete é o seguinte:

"""

'''
Especificação   Código  Preço
Cachorro Quente 100     R$ 1,20
Bauru Simples   101     R$ 1,30
Bauru com ovo   102     R$ 1,50
Hambúrguer      103     R$ 1,20
Cheeseburguer   104     R$ 1,30
Refrigerante    105     R$ 1,001
'''

"""Faça um programa que leia o código dos itens pedidos e as quantidades desejadas. Calcule e mostre o valor a ser pago por item (preço * quantidade) e o total geral do pedido. Considere que o cliente deve informar quando o pedido deve ser encerrado."""

j ='n'
while j!='s':
    print('------Iniciando pedido---------')
    c = []
    
    cod = int(input('Insira o código correspondente ao produto = '))
    while (cod<=100)and(cod>=105):
        print('ERRO - código inexistente')
        cod = int(input('Insira o código correspondente ao produto = '))
        c.append(cod)

    j = str(input('Deseja encerrar o pedido? (s/n) = '))

c

